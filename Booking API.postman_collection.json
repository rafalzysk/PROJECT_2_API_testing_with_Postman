{
	"info": {
		"_postman_id": "5c62415d-4e78-4214-86dd-38cad3c680dc",
		"name": "Booking API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28222862"
	},
	"item": [
		{
			"name": "Autorization token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usedURL}}/auth",
					"host": [
						"{{usedURL}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking IDs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseBody\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"     responseBody = pm.response.json();\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has a JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is not an empty array\", function () {\r",
							"    pm.expect(responseBody).to.be.an('array').that.is.not.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{usedURL}}/booking",
					"host": [
						"{{usedURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseBody\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"     responseBody = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"createdBookingID\", responseBody.bookingid);\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has a JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains required properties\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property('bookingid');\r",
							"    pm.expect(responseBody.booking).to.have.property('firstname');\r",
							"    pm.expect(responseBody.booking).to.have.property('lastname');\r",
							"    pm.expect(responseBody.booking).to.have.property('totalprice');\r",
							"    pm.expect(responseBody.booking).to.have.property('depositpaid');\r",
							"    pm.expect(responseBody.booking).to.have.property('bookingdates');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Bob\",\r\n    \"lastname\" : \"Bobek\",\r\n    \"totalprice\" : 358,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usedURL}}/booking",
					"host": [
						"{{usedURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a created booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseBody\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"     responseBody = pm.response.json();\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has a JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains required properties\", function () {\r",
							"    pm.expect(responseBody).to.have.property('firstname');\r",
							"    pm.expect(responseBody).to.have.property('lastname');\r",
							"    pm.expect(responseBody).to.have.property('totalprice');\r",
							"    pm.expect(responseBody).to.have.property('depositpaid');\r",
							"    pm.expect(responseBody).to.have.property('bookingdates');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Bob2\",\r\n    \"lastname\" : \"Bobek2\",\r\n    \"totalprice\" : 12345,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usedURL}}/booking/:id",
					"host": [
						"{{usedURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{createdBookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial update created booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseBody\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"     responseBody = pm.response.json();\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has a JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains required properties\", function () {\r",
							"    pm.expect(responseBody).to.have.property('firstname');\r",
							"    pm.expect(responseBody).to.have.property('lastname');\r",
							"    pm.expect(responseBody).to.have.property('totalprice');\r",
							"    pm.expect(responseBody).to.have.property('depositpaid');\r",
							"    pm.expect(responseBody).to.have.property('bookingdates');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-09-09\",\r\n        \"checkout\": \"2019-09-09\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usedURL}}/booking/:id",
					"host": [
						"{{usedURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{createdBookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseBody\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"     responseBody = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has a JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains declared properties\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property('firstname');\r",
							"    pm.expect(responseBody).to.have.property('lastname');\r",
							"    pm.expect(responseBody).to.have.property('totalprice');\r",
							"    pm.expect(responseBody).to.have.property('depositpaid');\r",
							"    pm.expect(responseBody).to.have.property('bookingdates');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{usedURL}}/booking/:id",
					"host": [
						"{{usedURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{createdBookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/:id",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{createdBookingID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": "f2de5258253643f",
			"type": "string"
		},
		{
			"key": "createdBookingID",
			"value": ""
		},
		{
			"key": "usedURL",
			"value": "https://restful-booker.herokuapp.com",
			"type": "string"
		}
	]
}